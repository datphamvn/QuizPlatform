@using Newtonsoft.Json;
@using QuizPlatform.Utils;
@model Tuple<List<Category>, List<Question>, Question>

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_LayoutHome.cshtml";
}

@{
    string json = JsonConvert.SerializeObject(Model.Item3.Answers);
    var categories = Model.Item1;

    Func<IEnumerable<Category>, int?, IEnumerable<Category>> getChildren = null;
    getChildren = (cats, parent) => cats.Where(c => c.ParentCategory == parent).Select(c =>
    {
        c.Children = getChildren(cats, c.ID).ToList();
        return c;
    });
    var rootCategories = getChildren(categories, -1).ToList();
}

<div class="container-fuild mx-4 px-4 section-type1">
    <h2>Editing Multichoice Question</h2>

    <div class="subsection ms-4">
        <div class="title-subsection pb-3">
            <i class="fa-solid fa-caret-down"></i> <span>General</span>
        </div>
        <div class="content-subsection">
            <form action="~/question/Update" method="POST">
                <div class="row mb-3">
                    <label for="CategoryID" class="col-sm-4 col-form-label">Category</label>
                    <div class="col-sm-4">
                        <select class="form-select" id="tree-view" name="CategoryID">
                            <option value="-1" selected>Default</option>
                            @foreach (var category in rootCategories)
                            {
                                <option value="@category.ID">@category.Name (@Html.Raw(HtmlHelpers.CountQuestionsInCategory(Model.Item2, @category.ID)))</option>
                                @Html.Raw(HtmlHelpers.RenderChildren(category.Children, Model.Item2, 1))
                            }
                        </select>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-sm-4 d-flex justify-content-between align-items-center">
                        <label for="ID" class="col-form-label">Question name</label>
                        <i class="fa-solid required fa-circle-exclamation text-end"></i>
                    </div>
                    <div class="col-sm-8">
                        <input type="text" class="form-control" name="ID" value="@Model.Item3.ID" readonly>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-sm-4 d-flex justify-content-between align-items-center">
                        <label for="Content" class="col-form-label">Question text</label>
                        <i class="fa-solid required fa-circle-exclamation text-end"></i>
                    </div>
                    <div class="col-sm-8">
                        <input type="hidden" class="form-control vSummernote" id="Content" name="Content" required>
                        <div class="summernote" id="smnContent">@Html.Raw(Model.Item3.Content)</div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-sm-4 d-flex justify-content-between align-items-center">
                        <label for="DefaultMark" class="col-form-label">Default mark</label>
                        <i class="fa-solid required fa-circle-exclamation text-end"></i>
                    </div>
                    <div class="col-sm-2">
                        <input type="number" class="form-control" name="DefaultMark" value="@Model.Item3.DefaultMark" required>
                    </div>
                </div>

                <div id="lstChoice-item"></div>

                <div class="row py-2">
                    <div class="col offset-sm-4">
                        <button class="btn btn-style-1 btn-primary" id="addChoices">
                            BLANKS FOR 3 MORE CHOICES
                        </button>
                        <button class="btn btn-style-1 btn-primary btn-red" id="rmChoices">
                            REMOVE LAST CHOICES
                        </button>
                    </div>
                </div>

                <input type="hidden" name="typeSubmit" id="typeSubmit">
                <div class="row py-2 mt-4">
                    <div class="col offset-sm-4">
                        <button class="btn btn-style-1 btn-primary" id="btnSaveContinue">
                            Save changes and continue editing
                        </button>
                    </div>
                </div>
                <div class="row py-2">
                    <div class="col offset-sm-4">
                        <button class="btn btn-style-1 btn-primary btn-red" id="btnSave">
                            Save changes
                        </button>
                        <a href="~/home/ManageTab" class="btn btn-style-1 btn-primary">Cancel</a>
                    </div>
                </div>

            </form>
        </div>
    </div>

</div>

<!-- include summernote css/js -->
<link href="https://cdn.jsdelivr.net/npm/summernote@0.8.20/dist/summernote-lite.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/summernote@0.8.20/dist/summernote-lite.min.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })

        $('#tree-view').val(@Model.Item3.CategoryID);

        let count = 1;
        var strHTMLChoiceItem = (count, textRaw) => `
                    <div class="row mb-3">
                        <label for="Answers[${count - 1}].choice" class="col-sm-4 col-form-label text-end">
                                Choice ${count}
                        </label>
                        <div class="col-sm-4 ">
                            <input type="hidden" class="form-control vSummernote" name="Answers[${count - 1}].choice" id="Answers[${count - 1}].choice">
                            <div class="summernote">${textRaw}</div>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <label for="Answers[${count - 1}].weight" class="col-sm-4 col-form-label text-end">Grade</label>
                        <div class="col-sm-2">
                                <select class="form-select" aria-label="Default select example" name="Answers[${count - 1}].weight" id="boxAnswers${count - 1}">
                                <option value="2" selected>None</option>
                                <option value="1">100%</option>
                                <option value="0.9">90%</option>
                                <option value="0.8333333">83.33333%</option>
                                <option value="0.8">80%</option>
                                <option value="0.75">75%</option>
                                <option value="0.7">70%</option>
                                <option value="0.6666667">66.66667%</option>
                                <option value="0.6">60%</option>
                                <option value="0.5">50%</option>
                                <option value="0.4">40%</option>
                                <option value="0.3333333">33.33333%</option>
                                <option value="0.3">30%</option>
                                <option value="0.25">25%</option>
                                <option value="0.2">20%</option>
                                <option value="0.1666667">16.66667%</option>
                                <option value="0.1428571">14.28571%</option>
                                <option value="0.125">12.5%</option>
                                <option value="0.1111111">11.11111%</option>
                                <option value="0.1">10%</option>
                                <option value="0.05">5%</option>
                                <option value="-0.05">-5%</option>
                                <option value="-0.1">-10%</option>
                                <option value="-0.1111111">-11.11111%</option>
                                <option value="-0.125">-12.5%</option>
                                <option value="-0.1428571">-14.28571%</option>
                                <option value="-0.1666667">-16.66667%</option>
                                <option value="-0.2">-20%</option>
                                <option value="-0.25">-25%</option>
                                <option value="-0.3">-30%</option>
                                <option value="-0.3333333">-33.33333%</option>
                                <option value="-0.4">-40%</option>
                                <option value="-0.5">-50%</option>
                                <option value="-0.6">-60%</option>
                                <option value="-0.6666667">-66.66667%</option>
                                <option value="-0.7">-70%</option>
                                <option value="-0.75">-75%</option>
                                <option value="-0.8">-80%</option>
                                <option value="-0.8333333">-83.33333%</option>
                            </select>
                        </div>
                    </div>`

        let lstChoices = document.getElementById("lstChoice-item");
 
        var fullHTMLChoices = '';

        var lstChoice = @Html.Raw(json);
        count = lstChoice.length;
        console.log(lstChoice);
        for (var i = 0; i < lstChoice.length; ++i) 
        {
            fullHTMLChoices += `<div class="choice-item pb-3 mt-3">` + strHTMLChoiceItem(i + 1, lstChoice[i].choice) + `</div>`;
        }
        lstChoices.innerHTML = fullHTMLChoices;
        
        
        for (var i = 0; i < lstChoice.length; ++i) {
            var slc = "#boxAnswers" + i;
            $(slc).val(lstChoice[i].weight);

            $('.summernote').summernote({
                toolbar: [
                    ['insert', ['picture', 'video']]
                ]
            });
        }

        const addBtn = $('#addChoices');
        var NUM_CHOICES_ADD = 3;
        const deleteBtn = $('#rmChoices');
        addBtn.click(function (e) {
            e.preventDefault();

            for (var i = 0; i < NUM_CHOICES_ADD; i++) {
                count++;
                let newChoice = document.createElement("div");
                newChoice.classList.add("choice-item");
                newChoice.classList.add("pb-3");
                newChoice.classList.add("mt-3");
                newChoice.innerHTML = strHTMLChoiceItem(count, "");
                lstChoices.appendChild(newChoice);
            }
            $('.summernote').summernote({
                toolbar: [
                    ['insert', ['picture', 'video']]
                ]
            });
        })


        deleteBtn.click(function (e) {
            e.preventDefault();
            if (count > 2) {
                count--;
                lstChoices.removeChild(lstChoices.lastElementChild);
            }
        })

        function handleSaveOrSubmit() {
            var markupList = [];
            $('.summernote').each(function () {
                var markup = $(this).summernote('code');
                markupList.push(markup);
                $(this).summernote('destroy');
            });

            var idx = 0;
            $('.vSummernote').each(function () {
                $(this).val(markupList[idx]);
                idx++;
            });

            var allFilled = true;
            $("form :input[required]").each(function () {
                if ($(this).val() == "") {
                    allFilled = false;
                }
            });

            if (allFilled) {
                $('form').submit();
            } else {
                alert("Please fill in all required fields");
            }
        }

        $('#btnSave').click(function (e) {
            e.preventDefault();
            /*
            var markup = $('.summernote').summernote('code');
            $('.summernote').summernote('destroy');

            var smContentHtml = $('#smnContent').html();
            $('#Content').val(smContentHtml);*/
            $('#typeSubmit').val("Save");
            handleSaveOrSubmit();
        });

        $('#btnSaveContinue').click(function (e) {
            e.preventDefault();

            $('#typeSubmit').val("SaveContinue");
            handleSaveOrSubmit();
        });

    });
</script>
